#!/bin/bash
#
#  Copyright (c) 2006, 2014 SGI. All rights reserved.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

## pft_per_node:  cpunodebind pft to each node in the system and
## invoke runpft to run for 1..nr_cpus [allowed]

# for plot annotations
PLATFORM=$(dmidecode -s system-product-name )
if [[ -n "$PLATFORM" ]];  then
	PLATFORM=$( echo "$PLATFORM" | awk '{print $1"-"$2$3;}')
else
	PLATFORM=Unknown
fi

# better way to determine nr_cpus?
nr_cpus=$(cat /proc/cpuinfo | grep  '^processor' | wc -l)
nr_nodes=$(ls -1d /sys/devices/system/node/node[0-9]* | wc -l)

# os revision for pft "tag"
osrev=$(uname -r)
#osrev=${osrev#2.6.}	# drop the 2.6.

# Memory Size -- if not set, calc from  GB_PER_TASK * nr_tasks)
#MEMSIZE="-m 4g"
MEMSIZE="-m 0"
GB_PER_TASK="-g 2"

# Number of Runs Per Thread count:
NRPT="-N 4"

# Affinitize -- bind to cpus; use SCHED_FIFO
BIND="-af"

# Test type:  -n for tasks, nothing for threads
TEST_TYPE= #-n

case $TEST_TYPE in
-n)	task_thread="task"
	Task_thread="Task"
	;;
*)	task_thread="thread"
	Task_thread="Thread"
	;;
esac

TIMESTAMP="$(date +%y%m%d-%H%M%S)"

RUNPFT="/usr/local/bin/runpft"

STOP_FILE=./pft_stop_file

outprefix=pft_per_node-$PLATFORM-$osrev-$task_thread-$TIMESTAMP

# =====================================================================

main()
{

	echo "PLOTID dl785c_per_node_${task_thread}_pft"
	echo "TITLE Per Node $Task_thread Scalability"
	echo "SUBTITLE $PLATFORM $osrev"

	rm -f $STOP_FILE
	for nid in {0..7}; do
		if [[ -f $STOP_FILE ]]; then
			echo "Saw 'stop file before node $nid'" >&2
			break
		fi
		# echo "LEGEND DL785 node $nid"
		echo "LEGEND $osrev node $nid $task_thread"
		# anon mem, sys default mpol, touch to fault
		# pass dummy 'tag' to generate pft header
        	_cmd="numactl --cpunodebind=$nid $RUNPFT $TEST_TYPE $NRPT $MEMSIZE $GB_PER_TASK $BIND tag"
		echo "$_cmd" >&2
		eval "$_cmd"
	done

}

# =====================================================================
main "$@" >${outprefix}.pft
